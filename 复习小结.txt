#第一章 Web基础知识
	
一.web基础知识
1.web开发基本概念
	(1)万维网（www、world wide web），是一个由许多互相链接的超文本组成的系统，通过互联网访问。

	(2)网页是浏览器中打开的一个页面

	(3)网站是一组域名相同的网页的集合

	(4)浏览器：显示网页内容，并让用户与这些文件交互的一种软件。

	(5)web服务器：提供web服务的计算机。

	(6)统一资源定位符（URL）：互联网上标准资源的地址，可以从互联网上得到的资源的位置和访问方法。由协议、域名、资源路径组成。

2.网站访问过程

3.软件架构分类及各级特征
	(1)B/S架构及其特点

		无需安装特定客户端程序，通过URL访问

		跨平台能力

		无缝升级，客户端免维护

		不能直接使用客户端硬件资源，用户体验单一

	(2)C/S架构及其特点

		需要安装特定客户端程序

		针对不同平台开发不同版本

		升级应用须重新安装

		充分应用客户端硬件资源，构建大型3D效果应用

4.web系统开发过程，及相关知识体系

5.网站类型

	(1)按网站主体性质划分

		政府网站、教育科研网站、企业网站、商业网站、个人网站

	(2)按网站功能划分

		宣传展示型网站、营销型网站、电子商务、网上购物、门户网站

6.网站结构（树型结构、扁平结构（特殊））

7.网站页面

	页面分类（主页、列表页、内容页）

	页面元素（文字、图片、表单、视频、 音频、动画）

二.HTML语言基础

	1.网页开发者编写网页文件，网页文件储存在web服务器上，用户通过URL
访问网页，web服务器用浏览器解析呈现网页

2、网页页面的组成：内容+结构

4、HTML基本语法：

	词汇（标签）

	语法（标签的使用规定）

	语义（浏览器“理解”的标签含义）

5、HTML标记分类

	双标签：由“开始标签”和“结束标签”两部分构成，必须成对使用，且必须合理嵌套。

	单标签：在开始标签中进行关闭（以开始标签的结束而结束）

6、HTML文档结构

	<!DOCTYPE html>

	<html>
		<head>
			<title>demo2_2</title>
		</head>
		<body>
		</body>
	</html>

7、开发工具简介

	浏览器：IE9/10/11、 火狐、谷歌（查看网页源文件，开发者工具）

	编辑器：Sublime Text 3（新建文件，编辑文件，保存等操作）

#第三章 构建页面（一）

1、网页元素包含内容：文字、 超链接、 列表、 图片。

2、在网页中插入文字

	标题：<h1> ― <h6>

	段落：<p>…</p>
	
	换行：<br/>
	
	水平线：<hr/>
	
	实体：
		   空格 &nbsp;

		< 小于号 &lt;

		> 大于号 &gt;

		& 和号 &amp;

		" 引号 &quot;

	注释：<!--注释内容-->

3、插入列表

	有序列表:	
		<ol>
			<li>..</li>
		</ol>		

	无序列表:
	
		<ul>
			<li>..</li>
		</ul>

4、插入图片

	<img src="images/logo.gif" width="10" height="20" alt="我是logo"/>

#第四章 构建页面（二）

1、插入超链接

	<a href="#">...</a>	

	target属性：

		_blank：在新窗口打开

		_self：在当前窗口打开

		_parent：在父窗口打开

		_top：在顶层窗口打开
2、插入音频
	
	<audio src="song.ogg" controls="controls">
	</audio>

3、插入视频

	<video src="movie.ogg" controls="controls">
	</video>

4、锚的应用

	锚点：网页中的某一位置。

	锚点链接：在同一个页面跳到指定位置的方式。

	创建锚点链接：

		①建立锚点

		②创建指向该锚的链接

		<a name=“锚点名称” >锚（显示在页面上的文本）</a>

		<a href=“#锚点名称”>……</a>

5、设置热区

	热区：在一张图片上定义多个超链接，不同区域应用不同超链接。


6、相对路径、绝对路径

	相对路径：是指由当前文件所在的路径引起的跟其它文件（或文件夹）的路径关系。

	绝对路径：从盘符开始的完整路径。

7、内联框架（iframe）

	内联框架：用于在网页内显示另一个网页文件。

	<iframe src="URL" width="x" height="y"scrolling="[OPTION]" frameborder="x" name="main">

	</iframe>
	
	scrolling：规定是否在 iframe 中显示滚动条：

		No：不出现滚动条 Yes：显示滚动条 Auto：自动出现滚动条

	frameBorder：设置是否显示框架的边框。 (1，0)

	name：框架的名字，用来进行识别。




#第五章 构建页面（3）

1、插入表格

	<table>
		<tr>
			<th>姓名</th>
			<th>年龄</th>
			<th>成绩</th>
		</tr>
		<tr>
			<td>李四白</td>
			<td>20</td>
			<td>100</td>
		</tr>

	</table>

	
	<table></table>：定义一个表格

	<tr></tr>：定义一行

	<th></th>：定义表头

	<td></td>：定义一个单元格

相关属性：

	width:规定表格元素的宽度（pixels或%）
	
	bgcolor：表格背景颜色

	background：表格背景图

	align：表格的对齐方式
	
	border： 表格边框的宽度（pixels）

	bordercolor：表格边框的颜色

	cellpadding : 单元边沿与其内容之间的距离

	cellspacing : 单元格之间的空白（pixels或%）

	colspan ：跨列
	
	rowspan ：跨行


2、插入表单

	 <form></form>

相关属性：

	action：规定当提交表单时向何处发送表单数据
	
	值：URL

	method：规定用于发送 form-data 的 HTTP 方法。

	值：get/post


密码域：
	<form>
		密码：<input type="password" name="password">
	</form>

单选按钮：（Radio Buttons）

	<form>
		<input type="radio" name="sex" value="male" />Male
		<br />
		<input type="radio" name="sex" value= "female" />Female
	</form>

复选框：（ Checkboxes）

	<form>
		<input type="checkbox" name="bike" />
		I have a bike
		<br />
		<input type="checkbox" name="bike" />
		I have a car
	</form>

选择文件：

	<form>
		<input type="file" name="ding">
	</form>


按钮：

	<input type="button" value="确定">


多行文本域：

	<textarea rows="3" cols="20">

	</textarea>


下拉列表：

	<select name="class">
		<option value="first">软件一班</option>
		<option value="two"> 软件二班</option>
		<option value="three">软件三班</option>
		<option value="four"> 软件四班</option>
	</select>


#第六章  HTML4.01与HTML5


1、插入插件

	<object height="100" width="100" data="song.mp3"></object>

2、自定义绘图

	<canvas width="40px" height="60px" id="animal" ></canvas>

3、HTML样式修饰性标签介绍

	<font>规定文本的字体、字体尺寸、字体颜色。
  
	<strong>用于强调文本
  
	<b>规定粗体文本

	

	<body>
	
	< font >你好</font>

	<strong>吴亦凡</strong>

	<b>吴亦凡</b>
	
	<body>


#第七章   CSS语言基础

1、为什么使用CSS：

	更专业的样式修饰方法
?
	改一处动全局的方法
?
	更简约的布局方法
?
	更简便的样式修饰方法



2、CSS简介：

	Cascading Style Sheet 的缩写，译作【层叠样式表】

	是用于(增强)控制网页样式并允许【将样式与网页内容分离】的一种标记性语言。

3、CSS的基本语法

	[1]样式写法：选择器{ 属性：属性值；属性：属性值；}

	[2]选择器：
		（1）标签选择器 -- 影响整个页面中该标签的样式			一对多
	
			<head>
	   			<title></title>
	   		<style>
				p { color:red; font-size:14px; }
	   		</style>
			</head>

			<body>
				<p>这是一段话</p>
				<p>这是两段话</p>
			</body>
	
		（2）类选择器 -- 影响所有以class属性引用该类的标签样式		多对多
			
			（以 "." 开头定义的选择符）

			.red { color:red; }
			.blackbody { font-size:14px; }

			<p class="red">这是一段话</p>
			<p class="red blackbody">这是两段话</p>
			<h1 class="red  blackbody">这是标题</h1>

		（3）id选择器 -- 影响以id属性引用该选择符的标签样式		一对一
	
			（以"#"开头定义的选择符）

			#red { color:red;font-size:14px; }

			<p id="red">这是一段话</p>
   	
			【单一页面中，一个id选择器只能使用一次】


4、结构和样式分离思想:

	（1）行内样式  -- 在元素标签内通过style属性添加样式
		<body>
	  	 <p style="color:green;">这是一段话</p>
		</body>

	（2）页内样式  -- 在head部分的style标签内添加样式
		<head>
	   	<style type="text/css">
			p { color:red; }
			.green{ color:green; }
			#blue{ color:blue; }
	   	</style>
		</head>

	（3）外部样式  --  引用外部建立的.css文件
	
      		<head>
			<link rel="stylesheet"type="text/css"href="css/demo.css(文件路径)"
      		</head>


5、CSS基本应用示例。



#第八章 文本样式和字体样式


1、CSS字体相关类样式修饰：

	字体系列：font-family:'宋体','仿宋'；

	字体大小：font-size：20px；/ 2em；/200%；

	字体风格：font-style：italic；/normal；/oblique；

	字体加粗：font-weight：900；/ bolder;/lighter;/normal;

	字体综合设置：font

	【font：style weight size family；】	

2、CSS文本类样式修饰：

	文本缩进：text-indent：text-indent：2em；/-3em；

	水平对齐：text-align：text-align：left/center/right；

	文本修饰：text-decoration：none/overline/underline/line-through/blink；

	文本颜色：color：green；

	行高：line-height：36px/1.5em；


#第九章 超链接和伪类

1、CSS超链接的修饰：

	未被访问的超链接a:link { text-decoration：none；}

	鼠标经过超链接a:hover { color：green；}

	链接被点击的那一刻a:acitve{text-decoration：underline；}

	访问过的超链接a:visited{ color:#FF000000 ；}

		【a: link visited hover active ；】


2、超链接应用

3、CSS伪类的使用方法

	:link 向未被访问的链接添加样式

	:visited 向已被访问的链接添加样式

	:hover 当鼠标悬浮在元素上方时，向元素添加样式

	:active 向被激活的元素添加样式

	:focus 向拥有键盘输入焦点的元素添加样式

	:first-child 向元素的第一个子元素添加样式

	:lang 向带有指定 lang 属性的元素添加样式

4、CSS伪元素的使用方法




#第十章 背景样式和列表样式


1、CSS背景类样式修饰

	背景色：background-color: gray;/ rgb(128,128,128);/ #808080;

	背景图像：background-image: url (image/bg.jpg);

	背景重复：background-repeat:repeat-x;

		repeat	默认,背景图像将在垂直方向和水平方向重复

		repeat-x	背景图像将在水平方向重复

		repeat-y	背景图像将在垂直方向重复

		no-repeat	背景图像将仅显示一次


	背景定位：background-position:center;

	背景综合属性：background: #00ff00 url(image/bg.jpg) no-repeat center;


2、CSS列表类样式修饰

	列表类型：list-style-type:none;
	
		none	无标记
	
		circle	标记是空心圆

		square	标记是实心方块

		decimal	标记是数字

		lower-alpha   标记是小写英文字母 (a, b, c, d, e, 等。)

	列表项图像：list-style-image:url(image/arrow.gif);
	
	列表标志位置：list-style-position: outside;/: inside;

	列表综合设置:list-style: square inside url(image/arrow.gif);
	


#第十一章 网页布局

1、布局简介

	布局概念：页面尺寸、常见版式


2、布局思想：由整体到局部

3、结构性标签div、span

	div相当于一个容器（盒子）

	div标签可以把文档分割为独立的、不同的部分

	通过id或class属性区分不同的容器

4、应用浮动float

	float: none | left | right；

	清除浮动：

		clear: left / right / both / none；

			left：不允许左边有浮动的元素

			right：不允许右边有浮动的元素

			both：不允许左右两边有浮动的元素

			none：默认值，可以浮动

	float应用

		1. 浮动元素距离父元素边框的位置，是该侧的父元素padding+自身margin的值
	
		2. 通常不会超过父元素的边界

		3. 元素一旦浮动就不属于父元素了

		4. 浮动元素不会相互重叠

		5. 不能上下浮动，通常只设一种浮动即可

		6. 如果父元素宽度不够，浮动元素会另起一行显示。

5、float所产生的问题
	

	浮动元素距离父元素边框的位置，是该侧的父元素padding+自身margin的值

6、相对定位、绝对定位

	绝对定位

		position:absolute；


	相对定位

		position:relative；

7、布局示例





#第十二章 CSS盒子模型


	1、行内元素、块级元素的概念及display属性的用法：

	2、行内元素：在显示时通常不会以新行开始，横向排列，到最右端自动折行。

          	作为内容或其他元素的容器，控制内部元素和内容的样式。

	3、块级元素：元素在显示时会独占一行，并同时具有宽、高、内外边距特征。

         	作为内容或其他元素的容器，可控制元素的大小、边框、位置等

         	以及控制内部元素和内容的样式。


	4、display属性的用法：用于指定HTML标签的显示方式，用法为属性值：关键字

	5、CSS盒子模型简介：一个矩形区域，内容包裹在盒子中。盒子的堆叠与嵌套形成整个页面的内容排布。

	6、盒子模型：通过盒子与盒子的嵌套、堆叠，控制页面内容的展示位置（布局）。

		宽度 width 

		高度 height 

		边框 border 

		边框宽度 border-width 

		边框颜色 border-color 

		边框样式 border-style 

		内边距 padding 

		外边距 margin




#第十三章 CSS高级内容

	1、CSS高级选择器

		分组选择器：h2, p {color:gray;}
		
		派生选择器：通过依据元素在其位置的上下文关系来定义样式，可以使标记更加简洁。

			li strong {font-style: italic;font-weight: normal;}

		属性选择器：对带有指定属性的 HTML 元素设置样式。[title]{color:red;}

		后代选择器：后代选择器又称为包含选择器。后代选择器可以选择作为某元素后代的元素。

			h1 em {color:red;}

		子元素选择器：与后代选择器相比，子元素选择器只能选择作为某元素子元素的元素。

			h1 > strong {color:red;}

		相邻兄弟选择器：相邻兄弟选择器可选择紧接在另一元素后的元素，且二者有相同父元素。

			h1 + p {margin-top:50px;}

	2、
		导航栏：竖直导航栏和水平背景图片导航栏的制作；未添加任何样式的导航栏；

		图片库：images

		图片透明：opacity:0.7;

		CSS颜色:#666;或#080808；或rgb(x,x,x)；

		CSS单位：%	百分比；in	英寸；cm	厘米；mm	毫米em	1em等于当前的字体尺寸。


		2em 等于当前字体尺寸的两倍。

		ex	一个ex 是一个字体的 x-height。

		pt	磅 (1 pt 等于 1/72 英寸)

		pc	12 点活字 (1 pc 等于 12 点)

		px	像素 (计算机屏幕上的一个点)

		网络安全字体：font-family:’字体’；


	3、CSS听觉参考手册



#第十四章 div+CSS布局实战

	主流的浏览器调试工具有Google浏览器自带调试工具、Firebug 、IETester；

	浏览器调试工具的使用方法：

		1.网页中选定需要修改或查看样式的网页元素，右键，审查元素。

		2.查看需要修改的内容以及对应区域的CSS样式

		3.修改CSS样式中的属性

	根据实例资料，完成页面搭建：

	网页设计基本流程：分析网页结构、HTML网页结构、CSS实现布局、插入网页内容、修饰样式。

	布局技巧总结：
		
		1.网页布局遵循从整体到局部的原则。

		2.margin容易产生边界的重合，边界重合时利用padding或border来避免。

		3.使用浮动功能时记得适当清除指令。




#第十五章 浏览器兼容性调整

	浏览器兼容性问题简介：

		浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。

	常见的浏览器兼容性问题：

		1、网页居中问题

		2、某些浏览器不支持某些属性

		3、png透明图片支持问题

		4、不同浏览器的标签默认的外边距和内边距不同

		5、块属性标签float后，又有横行的margin情况下，在IE6显示margin比设置的大

	CSS Hack跨浏览器解决方案：

		1、HTML头部引用Hack（条件注释法）

		2、选择器Hack（选择器前缀法）

		3、CSS类内部Hack（类内属性前缀法）

	IE条件注释：在代码旁边进行恰当的注释。
	W3C验证：借助w3c提供的HTML验证器和CSS验证器对代码进行网上标准化验证
	HTML验证器：http://validator.w3.org
           
	CSS验证器：http://jigsaw.w3.org/css-validator/